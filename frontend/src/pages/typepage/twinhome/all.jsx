import React, { useEffect, useState } from "react";
import axios from "axios";
import Sidebar from "../Sidebars";
import Navbar from "../../../components/Sidebar";
import { useNavigate } from "react-router-dom";
import EditHomeModal from "../../component/EditHome";
import AddGuestModal from "../../../components/guest/Addguest/Addguest";
import "../ca.css";
import "../shared-styles.css";

export default function TwinHomeAllPage() {
  const [homes, setHomes] = useState([]);
  const [isEditModalOpen, setIsEditModalOpen] = useState(false);
  const [isAddGuestModalOpen, setIsAddGuestModalOpen] = useState(false);
  const [selectedHomeId, setSelectedHomeId] = useState(null);
  
  // ‡πÄ‡∏û‡∏¥‡πà‡∏° state ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö twin areas
  const [selectedArea, setSelectedArea] = useState("all");
  const [twinAreas, setTwinAreas] = useState([]);
  const [areaCounts, setAreaCounts] = useState({});
  
  // ‡πÄ‡∏Å‡πá‡∏ö state ‡πÄ‡∏î‡∏¥‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö townhome rows (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏ï‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ Sidebar)
  const [selectedRow, setSelectedRow] = useState("all");
  const [townhomeRows, setTownhomeRows] = useState([]);
  const [rowCounts, setRowCounts] = useState({});

  const navigate = useNavigate();

  useEffect(() => {
    // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• twin areas
    axios.get("http://localhost:3001/api/twin-areas")
      .then(res => {
        console.log("Twin areas loaded:", res.data);
        setTwinAreas(res.data);
      })
      .catch(err => {
        console.error("Error loading twin areas:", err);
        // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏ñ‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
        setTwinAreas([
          { id: 1, name: '‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà 1', max_capacity: 6, home_count: 0 },
          { id: 2, name: '‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà 2', max_capacity: 4, home_count: 0 }
        ]);
      });
  }, []);

  const fetchHomes = () => {
    axios.get("http://localhost:3001/api/homes")
      .then(res => {
        console.log("üìä All homes data:", res.data);
        
        // ‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ù‡∏î
        const twinHomes = res.data.filter(h => h.hType === "‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ù‡∏î");
        
        // ‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏° selectedArea
        const filteredHomes = selectedArea === "all" 
          ? twinHomes 
          : twinHomes.filter(h => h.twin_area_id == selectedArea);
          
        console.log("üéØ Filtered twin homes:", filteredHomes);
        
        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ö‡πâ‡∏≤‡∏ô‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà
        const counts = { total: twinHomes.length };
        twinAreas.forEach(area => {
          counts[area.id] = twinHomes.filter(h => h.twin_area_id == area.id).length;
        });
        
        console.log("Area counts:", counts);
        
        setHomes(filteredHomes);
        setAreaCounts(counts);
      })
      .catch(err => {
        console.error("Error fetching homes:", err);
      });
  };

  useEffect(() => {
    fetchHomes();
  }, [selectedArea, twinAreas]);

  // Handler ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà
  const handleAreaChange = (areaId) => {
    console.log("Area changed to:", areaId);
    setSelectedArea(areaId);
  };

  // Handler ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö townhome rows (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏ï‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ)
  const handleRowChange = (rowId) => {
    console.log("Row changed to:", rowId);
    setSelectedRow(rowId);
  };

  const handleAddGuest = (homeId) => {
    setSelectedHomeId(homeId);
    setIsAddGuestModalOpen(true);
  };

  const handleEditHome = (homeId) => {
    setSelectedHomeId(homeId);
    setIsEditModalOpen(true);
  };

  const handleCloseEditModal = () => {
    setIsEditModalOpen(false);
    setSelectedHomeId(null);
  };

  const handleCloseAddGuestModal = () => {
    setIsAddGuestModalOpen(false);
    setSelectedHomeId(null);
  };

  const handleUpdateSuccess = () => {
    fetchHomes();
  };

  return (
    <div style={{ minHeight: "100vh", background: "#fafbff" }}>
      <Navbar />
      
      <div style={{ display: "flex", minHeight: "calc(100vh - 84px)" }}>
        <Sidebar 
          selectedRow={selectedRow}
          onRowChange={handleRowChange}
          rowCounts={rowCounts}
          townhomeRows={townhomeRows}
          selectedArea={selectedArea}
          onAreaChange={handleAreaChange}
          areaCounts={areaCounts}
          twinAreas={twinAreas}
        />
        
        <div style={{ flex: 1 }}>
          <h2 style={{ 
            textAlign: "center", 
            marginTop: 32, 
            marginBottom: 24,
            color: "#3b2566",
            fontSize: "28px",
            fontWeight: "bold"
          }}>
            ‡∏ö‡πâ‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: ‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ù‡∏î ({selectedArea === "all" ? "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" : twinAreas.find(a => a.id == selectedArea)?.name || `‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà ${selectedArea}`})
          </h2>
          
          <div style={{ padding: 32 }}>
            <div className="movie-container">
              {homes.length === 0 ? (
                <div className="no-data">
                  {selectedArea === "all" 
                    ? "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡πâ‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ù‡∏î" 
                    : `‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡πâ‡∏≤‡∏ô‡πÉ‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å`
                  }
                </div>
              ) : (
                homes.map((home, index) => (
                  <React.Fragment key={home.home_id}>
                    {/* ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ card ‡πÄ‡∏î‡∏¥‡∏°... */}
                    <div className="movie-card">
                      <div className="movie-poster">
                        <img
                          src={
                            home.image
                              ? `http://localhost:3001/uploads/${home.image}`
                              : "/img/house-default.png"
                          }
                          alt="‡∏ö‡πâ‡∏≤‡∏ô"
                        />
                        <div className="status-badge">
                          {home.status || "‡∏ß‡πà‡∏≤‡∏á"}
                        </div>
                      </div>
                      <div className="movie-info">
                        <h3 className="movie-title">
                          <strong>‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà:</strong> {home.Address}
                        </h3>
                        <div className="movie-details">
                          <div className="detail-item">
                            <strong>
                              {home.hType || "‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ù‡∏î"} - {
                                home.twin_area_id 
                                  ? twinAreas.find(area => area.id === home.twin_area_id)?.name || `‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà ${home.twin_area_id}`
                                  : "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà"
                              }
                            </strong>
                          </div>
                          <div className="detail-item">
                            <strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏û‡∏±‡∏Å:</strong> {home.guest_count || 0}/{home.hType === "‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ù‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà1" ? "6" : "6"} ‡∏Ñ‡∏ô
                          </div>
                          <div className="detail-item">
                            <strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</strong> 
                            <span className={`status ${
                              (home.hType === "‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ù‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà1" && home.guest_count >= 6) ||
                              (home.hType === "‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ù‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà2" && home.guest_count >= 4)
                                ? 'full' : 'available'
                            }`}>
                              {((home.hType === "‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ù‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà1" && home.guest_count >= 6) ||
                                (home.hType === "‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ù‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà2" && home.guest_count >= 4))
                                ? '‡πÄ‡∏ï‡πá‡∏°' : home.status}
                            </span>
                          </div>
                        </div>
                        <div className="movie-actions">
                          <button
                            className={`btn-primary ${
                              ((home.hType === "‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ù‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà1" && home.guest_count >= 6) ||
                               (home.hType === "‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ù‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà2" && home.guest_count >= 4))
                                ? 'disabled' : ''
                            }`}
                            onClick={() => handleAddGuest(home.home_id)}
                            disabled={
                              (home.hType === "‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ù‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà1" && home.guest_count >= 6) ||
                              (home.hType === "‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ù‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà2" && home.guest_count >= 4)
                            }
                          >
                            {((home.hType === "‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ù‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà1" && home.guest_count >= 6) ||
                              (home.hType === "‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ù‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà2" && home.guest_count >= 4))
                              ? '‡πÄ‡∏ï‡πá‡∏°‡πÅ‡∏•‡πâ‡∏ß' : '‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏û‡∏±‡∏Å'}
                          </button>
                          <button
                            className="btn-secondary"
                            onClick={() => navigate(`/guestview/${home.home_id}`)}
                          >
                            ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
                          </button>
                          <button
                            className="btn-edit"
                            onClick={() => handleEditHome(home.home_id)}
                          >
                            ‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                          </button>
                        </div>
                        {((home.hType === "‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ù‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà1" && home.guest_count >= 6) ||
                          (home.hType === "‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ù‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà2" && home.guest_count >= 4)) && (
                          <div className="warning-message">
                            ‡∏ö‡πâ‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏û‡∏±‡∏Å‡∏≠‡∏≤‡∏®‡∏±‡∏¢‡∏Ñ‡∏£‡∏ö {home.hType === "‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏ù‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà1" ? "6" : "4"} ‡∏Ñ‡∏ô‡πÅ‡∏•‡πâ‡∏ß
                          </div>
                        )}
                      </div>
                    </div>
                  </React.Fragment>
                ))
              )}
            </div>
          </div>
        </div>
      </div>

      {/* Edit Home Modal */}
      <EditHomeModal
        isOpen={isEditModalOpen}
        onClose={handleCloseEditModal}
        homeId={selectedHomeId}
        onUpdate={handleUpdateSuccess}
      />

      {/* Add Guest Modal */}
      <AddGuestModal
        isOpen={isAddGuestModalOpen}
        onClose={handleCloseAddGuestModal}
        homeId={selectedHomeId}
        onUpdate={handleUpdateSuccess}
      />
    </div>
  );
}