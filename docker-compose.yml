version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: nhms_mysql
    ports:
      - "3306:3306" # <-- เพิ่ม 2 บรรทัดนี้
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-nhms_root_password}
      MYSQL_DATABASE: ${DB_NAME:-nhms_db}
      MYSQL_USER: ${DB_USER:-nhms1}
      MYSQL_PASSWORD: ${DB_PASSWORD:-nhmsdi,crmpN}
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - nhms_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${MYSQL_ROOT_PASSWORD:-nhms_root_password}"]
      interval: 20s
      timeout: 10s
      retries: 10

  # Backend API
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: nhms_backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      NODE_ENV: production
      DB_HOST: ${DB_HOST:-mysql}
      DB_PORT: ${DB_PORT:-3306}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      PORT: 3001
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - nhms_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nhms_frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - nhms_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (สำหรับ session storage และ caching)
  redis:
    image: redis:7-alpine
    container_name: nhms_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - nhms_network
    command: redis-server --appendonly yes

volumes:
  mysql_data:
    driver: local
  uploads_data:
    driver: local
  redis_data:
    driver: local

networks:
  nhms_network:
    driver: bridge
